name: foodgram

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    # build it monthly: At 04:15 on day-of-month 1.
    - cron: '0 */2 * * *'
    # for testing the event "schedule": run every 15 minutes starting from minute 5 through 59 (0, 15, 30, 45)
    #- cron: '0/15 * * * *'
    #The quick and simple editor

jobs:
    tests:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        
        - name: Lint with flake8
          run: flake8 --exclude ./tests/,./recipes/migrations/,./foodgram/settings.py

    
    build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1


    deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
#      if: github.ref == 'refs/heads/master'
      steps:
      - name: check the repo 
        uses: actions/checkout@v2
      - name: executing remote scp commands to deploy
        uses: actions/checkout@v2
          with:
            python-version: 3.8
          source: "docker-compose.yaml, nginx/default.conf"
          target: "~/app/"
      - name: executing remote ssh commands to deploy
        uses: actions/checkout@v2
          with:
            python-version: 3.8
          script: |
           cd ~/app
           sudo docker-compose down -v
           sudo docker-compose up --build -d --force-recreate && sudo docker-compose exec -T web python manage.py migrate --noinput && sudo docker-compose exec -T web python manage.py collectstatic --noinput && sudo docker-compose exec -T web python manage.py loaddata data.json
    send_message: 
      runs-on: ubuntu-latest
      needs: deploy
      steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!     
